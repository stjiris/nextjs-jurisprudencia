version: '3.9'
volumes:
  elasticsearch_data: {}
  excel_data: {}
  rss_data: {}

services:
  server:
    build:
      context: .
      dockerfile: ./Dockerfile
      args:
        NEXT_BASE_PATH: ${NEXT_BASE_PATH}
    environment:
      ES_URL: http://elasticsearch:9200
      ES_USER: elastic
      ES_PASS: elasticsearch
      NEXT_BASE_PATH: ${NEXT_BASE_PATH}
      PUBLIC_STATES: ${PUBLIC_STATES}
      RSS_FOLDER: /rss
    ports:
      - "${SERVER_HOST:-0.0.0.0}:${SERVER_PORT:-3000}:3000"
    volumes:
      - excel_data:/usr/src/app/files
      - rss_data:/rss
    depends_on:
      elasticsearch:
        condition: service_healthy
    restart: unless-stopped
  server-dev:
    build:
      context: .
      dockerfile: ./Dockerfile_dev
      args:
        NEXT_BASE_PATH: ${NEXT_DEV_BASE_PATH}
    environment:
      ES_URL: http://elasticsearch:9200
      ES_USER: elastic
      ES_PASS: elasticsearch
      NEXT_BASE_PATH: ${NEXT_DEV_BASE_PATH}
      PUBLIC_STATES: ${PUBLIC_STATES}
      RSS_FOLDER: /rss
    ports:
      - "${SERVER_DEV_HOST:-127.0.0.1}:${SERVER_DEV_PORT:-3000}:3000"
    volumes:
      - excel_data:/usr/src/app/files
      - .:/usr/src/app
      - rss_data:/rss
    depends_on:
      elasticsearch:
        condition: service_healthy
    restart: unless-stopped
    profiles:
      - dev
  clitools:
    build:
      context: ./compose/clitools
    environment:
      ES_URL: http://elasticsearch:9200
      ES_USER: elastic
      ES_PASS: elasticsearch
      RSS_FOLDER: /rss
      RSS_LINK: ${RSS_LINK:-http://localhost:3000/jurisprudencia}
      RSS_MAX_FEED_SIZE: 1000
    volumes:
      - rss_data:/rss 
  elasticsearch:
    build:
      context: ./compose/elasticsearch
      dockerfile: Dockerfile
    ports:
      - "127.0.0.1:9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    environment:
      xpack.security.enabled: true
      xpack.security.http.ssl.enabled: false
      discovery.type: single-node
      ES_JAVA_OPTS: -Xms1g -Xmx1g
      ELASTIC_PASSWORD: elasticsearch
      # to use kibana set the kibana_system password to elasticsearch with:
      # $ elasticsearch-reset-password -u kibana_system -i
    healthcheck:
      test: curl --write-out 'HTTP %{http_code}' --fail --silent --output /dev/null http://elastic:elasticsearch@localhost:9200
      interval: 10s
      timeout: 30s
      retries: 15
      start_period: 10s
    restart: unless-stopped
  kibana:
    image: docker.elastic.co/kibana/kibana:8.4.0
    depends_on:
      elasticsearch:
        condition: service_healthy
    ports:
      - "127.0.0.1:5601:5601"
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
      ELASTICSEARCH_USERNAME: kibana_system
      ELASTICSEARCH_PASSWORD: elasticsearch
    restart: always
    profiles:
      - kibana
